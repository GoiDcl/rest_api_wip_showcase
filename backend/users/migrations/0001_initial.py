# Generated by Django 5.0.3 on 2024-11-19 14:39

import api.custom_user
import django.core.validators
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('last_name', models.CharField(max_length=150, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=150, verbose_name='Имя')),
                ('middle_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Отчество')),
                ('role', models.CharField(choices=[('admin', 'Сотрудник ТО'), ('manager', 'Менеджер'), ('ordinary', 'Пользователь'), ('superuser', 'Суперпользователь')], default='ordinary', max_length=32, verbose_name='Роль')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True, verbose_name='Номер телефона')),
                ('email', models.EmailField(max_length=255, unique=True, validators=[django.core.validators.EmailValidator(message='Емэйл уже занят, либо введён некорректно. Разрешены только буквы, цифры и @/./+/-/_ символы, а почта должна иметь такой вид: адрес@домен')], verbose_name='Электронная почта')),
                ('is_active', models.BooleanField(default=True, verbose_name='Актуальность пользователя')),
                ('is_staff', models.BooleanField(default=False, help_text='Влияет на возможность зайти в админ-панель django', verbose_name='Пользователь админ-панели')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'db_table': 'custom_user',
                'ordering': ('-created',),
            },
            managers=[
                ('objects', api.custom_user.CustomUserManager()),
            ],
        ),
    ]
